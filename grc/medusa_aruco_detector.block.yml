id: medusa_aruco_detector
label: ArUco Detector
category: '[Medusa]/OpenCV'

templates:
  imports: from gnuradio import medusa
  make: medusa.aruco_detector(${dictionary}, ${resolution.width}, ${resolution.height})

parameters:
- id: dictionary
  label: ArUco Dictionary
  dtype: enum
  options: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
  option_labels: [DICT_4X4_50, DICT_4X4_100, DICT_4X4_250, DICT_4X4_1000, DICT_5X5_50, DICT_5X5_100, DICT_5X5_250, DICT_5X5_1000, DICT_6X6_50, DICT_6X6_100, DICT_6X6_250, DICT_6X6_1000, DICT_7X7_50, DICT_7X7_100, DICT_7X7_250, DICT_7X7_1000, DICT_ARUCO_ORIGINAL, DICT_APRILTAG_16h5, DICT_APRILTAG_25h9, DICT_APRILTAG_36h10, DICT_APRILTAG_36h11, DICT_ARUCO_MIP_36h12]

- id: resolution
  label: Resolution
  dtype: enum
  options: ["640x480", "1280x720", "1280x1024", "1920x1080"]
  option_attributes:
    width: [640, 1280, 1280, 1920]
    height: [480, 720, 1024, 1080]

inputs:
- label: frame
  domain: stream
  dtype: byte
  vlen: ${ resolution.width * resolution.height * 3}
  optional: false

outputs:
- label: annotated_frame
  domain: stream
  dtype: byte
  vlen: ${ resolution.width * resolution.height * 3}
  optional: true

file_format: 1
